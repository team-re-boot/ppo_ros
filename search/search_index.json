{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"ppo_ros","text":"<p>ROS 2 package for legged robot control!</p> <p></p> <p>Let's control your robot with proximal policy optimization!</p>"},{"location":"#architecture","title":"Architecture","text":"<p>This package support proximal policy optimization.</p> <p>Proximal policy optimization is one of a Actor-Critic algorithms, this node is the result of exporting the Actor network in torchscript format and integrating it with ROS 2.</p> <p>ppo_ros node subscribe <code>control/state</code> topic and publish <code>control/action</code> topic.</p>"},{"location":"#simulator-hardware-interface","title":"Simulator / Hardware interface","text":"<p>Interface is very simple. Interface is ROS 2 topic.</p>"},{"location":"#interface-with-genesis-simulator","title":"Interface with Genesis simulator","text":"<p>Genesis and ppo_ros package communicate with ROS 2 topic over zenoh protocol.  </p> <p>Genesis and genesis_ros library is completely independent from ROS 2, so we can speed up learning inside genesis.</p>"},{"location":"#interface-with-real-robot","title":"Interface with Real robot","text":"<p>If you want to use real robot, it's simple make a ROS 2 node that publish <code>control/state</code> and <code>control/action</code> topic wiht <code>torch_msgs/msg/Float32Tensor</code> type.</p> <p>ppo_ros use type adaptation feature in ROS 2.</p> <p></p> <p>So, if you use GPU, you do not need to re-allocate tensor if you make Robot hardware driver node.</p>"},{"location":"tutorial/go2_walk/","title":"GO2 walk","text":""},{"location":"tutorial/setup/","title":"Setup","text":""},{"location":"tutorial/setup/#environment","title":"Environment","text":""},{"location":"tutorial/setup/#install-ros-2-humble","title":"Install ROS 2 Humble","text":"<p>This step is required.</p> <p>Please check official documentation.</p>"},{"location":"tutorial/setup/#install-nvidia-driver","title":"Install nvidia driver","text":"<p>This step is optional.</p> <p>Please refer Nvidia's official documentation.</p> <p>Maintainer of this package use version 550.144.03 and Nvidia RTX 3900 GPU.</p> <pre><code>Wed May 14 00:08:19 2025       \n+-----------------------------------------------------------------------------------------+\n| NVIDIA-SMI 550.144.03             Driver Version: 550.144.03     CUDA Version: 12.4     |\n|-----------------------------------------+------------------------+----------------------+\n| GPU  Name                 Persistence-M | Bus-Id          Disp.A | Volatile Uncorr. ECC |\n| Fan  Temp   Perf          Pwr:Usage/Cap |           Memory-Usage | GPU-Util  Compute M. |\n|                                         |                        |               MIG M. |\n|=========================================+========================+======================|\n|   0  NVIDIA GeForce RTX 3090        Off |   00000000:01:00.0  On |                  N/A |\n|  0%   44C    P8             30W /  420W |    1837MiB /  24576MiB |     16%      Default |\n|                                         |                        |                  N/A |\n+-----------------------------------------+------------------------+----------------------+\n\n+-----------------------------------------------------------------------------------------+\n| Processes:                                                                              |\n|  GPU   GI   CI        PID   Type   Process name                              GPU Memory |\n|        ID   ID                                                               Usage      |\n|=========================================================================================|\n|    0   N/A  N/A      1113      G   /usr/lib/xorg/Xorg                            895MiB |\n|    0   N/A  N/A      1402      G   /usr/bin/gnome-shell                          161MiB |\n|    0   N/A  N/A   3733146      G   ...seed-version=20250506-180209.207000        251MiB |\n|    0   N/A  N/A   3733155      G   ...erProcess --variations-seed-version        514MiB |\n+-----------------------------------------------------------------------------------------+\n</code></pre>"},{"location":"tutorial/setup/#install-cudacudnn","title":"Install cuda/cudnn","text":"<p>This step is optional.</p> <p>ppo_ros package depends on libtorch_vendor package. libtorch_vendor package support CUDA/CUDNN acceleration </p> <p>Please refer Nvidia's official documentation.</p> <p>Maintainer of this package use CUDA 12.4</p>"},{"location":"tutorial/setup/#build","title":"Build","text":"<pre><code>mkdir -p ros2_ws/src\ncd ros2_ws/src\ngit clone https://github.com/team-re-boot/ppo_ros.git\nvcs import . &lt; ppo_ros/dependency.repos\ncd ../\ncolcon build --cmake-args -DCMAKE_BUILD_TYPE=Release\n</code></pre>"},{"location":"tutorial/setup/#install-genesis_ros","title":"Install genesis_ros","text":"<p>Please refer genesis_ros documentation.</p>"}]}